initSidebarItems({"enum":[["StreamElement","An element of the stream. This is what enters and exits from the operators."]],"mod":[["sink",""],["source",""]],"struct":[["CountWindow",""],["CountWindowGenerator",""],["EndBlock",""],["EventTimeWindow",""],["Iterate","This is the first operator of the chain of blocks inside an iteration."],["IterationStateHandle","Handle to the state of the iteration."],["IterationStateLock","When the iteration block sends the `FlushAndRestart` message, the state of this host is in a critical state: the iteration block does not update it until it receives the new state from the leader and the downstream operators may access the state of the current iteration."],["KeyBy",""],["Map",""],["ProcessingTimeWindow",""],["ProcessingTimeWindowGenerator","Wrapper of `TimeWindowGenerator` that converts every `StreamElement::Item` into a `StreamElement::Timestamped`."],["Replay","This is the first operator of the chain of blocks inside an iteration."],["StartBlock",""],["Window","A window is a collection of elements and may be associated with a timestamp."],["Zip",""]],"trait":[["Data","Marker trait that all the types inside a stream should implement."],["DataKey","Maker trait that all the keys should implement."],["Operator","An operator represents a unit of computation. It's always included inside a chain of operators, inside a block."],["WindowDescription","A WindowDescription describes how a window behaves."],["WindowGenerator","A WindowGenerator handles the generation of windows for a given key."]],"type":[["EventTimeWindowGenerator",""],["Timestamp","When using timestamps and watermarks, this type expresses the timestamp of a message or of a watermark."]]});